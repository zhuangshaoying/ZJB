@model ZJB.Api.Entity.Community
@{
    Layout = null;
    List<CommunityHistoryPrice> communityHistoryPrices = this.ViewBag.HistoryPriceList;// new List<List<HouseBasicInfoModel>>();
}

<div class="mTitle con">
    <h2 class="no-b">小区信息</h2>
</div>
<div class="district">
    <a href="@Url.Action("Detail", "Community", new { communityId = Model.CommunityID })" class="communityContent WKBigDataBtn">
        <!--左侧图片-->
        <div class="communityPic"><img src="@(string.IsNullOrEmpty(Model.CoverImg)?"/images/nopic.jpg":Model.CoverImg)">
        </div>
        <!--右侧信息列表-->
        <div class="description">
            <p class="communityName"> @Model.Name </p>
            <p class="communityOthers">@Model.DistrctName-@Model.RegionName @Model.CompleteDate 建成
            <p>
            <p class="communityAddr"><span class="price_total">@((int) Model.SellPrice)<span class="unit">元/平</span></span>在售房源@(ViewBag.HouseCount)套
            </p>
        </div>
    </a>
</div>
@{ if(communityHistoryPrices!=null)
    {
        var date = "";
        var pricedate ="";
        decimal maxprice = 10000;
        foreach (var communityHistoryPrice in communityHistoryPrices)
        {
            date += ",'" + Convert.ToDateTime(communityHistoryPrice.UpdateTime).ToString("yy-MM")+"'";
            pricedate += "," + Convert.ToInt32(communityHistoryPrice.SellPrice);
            if (Convert.ToInt32(communityHistoryPrice.SellPrice) > maxprice)
            {
                maxprice = communityHistoryPrice.SellPrice??0;
            }
        }
        maxprice = Math.Ceiling((maxprice) / 10000)*10000;
        if (date.Length > 0)
        {
            date = date.Substring(1);
        }
        if (pricedate.Length > 0)
        {
            pricedate = pricedate.Substring(1);
        }

        <div class="xqIntroBox" style="border-bottom: 1px solid #f4f4f4; padding-bottom: 10px">
    <h4 class="villageChart">均价走势</h4>
    <div class="myechart" id="priceechart" style="width: 100%; height: 200px;"></div>
</div>
    <script language="javascript">
        var mychart = echarts.init(document.getElementById("priceechart"));
        var option = {
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    lineStyle: {
                        color: "#999",
                        width: 1,
                        type: "solid"
                    }
                }
            },
            grid: {
                top: "10%",
                left: '3%',
                right: '3%',
                bottom: '5%',
                containLabel: true
            },
            toolbox: {
                feature: {
                    //saveAsImage: {}

                }
            },
            xAxis: {
                type: 'category',
                //boundaryGap: false,
                data: [@Html.Raw(date)],
                axisLine: {
                    show: !0,
                    lineStyle: {
                        color: "#333",
                        width: .3
                    }
                },
                splitLine: {
                    show: !0,
                    lineStyle: {
                        color: "#e9e9e9",
                        width: .5
                    }
                }
            },
            yAxis: [
                {
                    type: 'value',
                    // name: '均价（元/平米）',
                    min: 10000,
                    max: @maxprice,
                    interval: 10000,
                    axisLabel: {
                        formatter: '{value}'
                    },
                    boundaryGap: [0, .1],
                    axisLine: {
                        show: !0,
                        lineStyle: {
                            color: "#333",
                            width: .3
                        }
                    },
                    splitLine: {
                        show: 0,
                        lineStyle: {
                            color: "#e9e9e9",
                            width: .5
                        }
                    }
                }
            ],
            series: [
                {
                    name: "均价",
                    type: "line",
                    yAxisIndex: 0,
                    //symbol: "circle",
                    symbolSize: 4,
                    itemStyle: {
                        normal: {
                            color: "#a6b5ee"
                        }
                    },
                    data: [@pricedate]
                }
            ]
        };
        mychart.setOption(option);
    </script>

    }
}